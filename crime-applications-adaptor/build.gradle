plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "4.2.1.3168"
	id 'info.solidsoft.pitest' version '1.9.11'
	id 'org.jsonschema2dataclass' version '6.0.0'
}

group = 'uk.gov.justice.laa.crime'

def versions = [
		springdocVersion       : "2.1.0",
		okhttpVersion          : "4.9.3",
		mockwebserverVersion   : "4.11.0",
		pitest                 : "1.14.1",
		commonsLang3Version    : "3.12.0",
		postgresqlVersion      : "42.3.3",
		springauthserverVersion: "1.0.1",
		festVersion            : '1.4',
		harmcrestVersion       : '1.3',
		jjwtVersion            : '0.11.5',
		validationapiVersion   : '2.0.1.Final',
		resilience4jVersion    : "2.0.2",
		CommonsioVersion       : '2.11.0'
]

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation platform("io.sentry:sentry-bom:6.24.0")

	implementation "io.sentry:sentry-spring-boot-starter"
	implementation "io.sentry:sentry-logback"

	compileOnly "org.projectlombok:lombok"

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdocVersion"
	implementation "org.apache.commons:commons-lang3:$versions.commonsLang3Version"
	implementation "io.github.resilience4j:resilience4j-spring-boot3:$versions.resilience4jVersion"

	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	implementation "io.jsonwebtoken:jjwt-api:$versions.jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$versions.jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$versions.jjwtVersion"

	implementation "javax.validation:validation-api:$versions.validationapiVersion"

	testImplementation "org.pitest:pitest:$versions.pitest"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockwebserverVersion"
	testImplementation group: 'commons-io', name: 'commons-io', version: versions.CommonsioVersion
	testImplementation group: 'org.easytesting', name: 'fest-assert', version: versions.festVersion
	testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: versions.harmcrestVersion

}

jacoco {
	toolVersion = "0.8.8"
}
tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/entity/**',
					'**/model/**',
					'**/dto/**',
					'**/config/**'
			])
		}))
	}
}

pitest {
	targetClasses = ['uk.gov.justice.laa.crime.applications.adaptor.*']
	excludedClasses = ['uk.gov.justice.laa.crime.applications.adaptor.CrimeApplicationsAdaptorApplication']
	threads = 5
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
	mutationThreshold = 60
}

tasks['sonarqube'].dependsOn test

sonarqube {
	properties {
		property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java"
		property "sonar.coverage.exclusions", "**/CrimeApplicationsAdaptorApplication.java"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.projectKey", "ministryofjustice_laa-crime-applications-adaptor"
		property "sonar.organization", "ministryofjustice"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectName", "laa-crime-applications-adaptor"
		property "sonar.pitest.mode", "reuseReport"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
	}
}


jsonSchema2Pojo {
	executions{
		main{
			io.source.setFrom files("${project.rootDir}/src/main/resources/schemas")
			klass.targetPackage = 'uk.gov.justice.laa.crime.applications.adaptor.model'
			klass.jackson2InclusionLevel = "NON_EMPTY"
			methods.builders = true
			methods.annotateJsr303 = true
			fields.floatUseBigDecimal = true
			dateTime.dateTimeType = "java.time.LocalDateTime"
		}
	}
}
